#!/usr/bin/env python3
"""
HTTP —Å–µ—Ä–≤–µ—Ä –¥–ª—è –≤–µ–±-AR –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π –º–æ–±–∏–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤
–î–æ—Å—Ç—É–ø–µ–Ω –ø–æ –ª–æ–∫–∞–ª—å–Ω–æ–π —Å–µ—Ç–∏ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–µ
"""

import sys
import os
import webbrowser
import socket
import qrcode
import io
import base64
from threading import Timer

def get_local_ip():
    """–ü–æ–ª—É—á–∞–µ—Ç –ª–æ–∫–∞–ª—å–Ω—ã–π IP –∞–¥—Ä–µ—Å –∫–æ–º–ø—å—é—Ç–µ—Ä–∞"""
    try:
        # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –≤–Ω–µ—à–Ω–µ–º—É –∞–¥—Ä–µ—Å—É, —á—Ç–æ–±—ã –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –ª–æ–∫–∞–ª—å–Ω—ã–π IP
        s = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
        s.connect(("8.8.8.8", 80))
        local_ip = s.getsockname()[0]
        s.close()
        return local_ip
    except:
        return "127.0.0.1"

def generate_qr_code(url):
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç QR –∫–æ–¥ –¥–ª—è URL"""
    try:
        qr = qrcode.QRCode(version=1, box_size=2, border=1)
        qr.add_data(url)
        qr.make(fit=True)
        
        # –°–æ–∑–¥–∞–µ–º ASCII –≤–µ—Ä—Å–∏—é QR –∫–æ–¥–∞
        modules = qr.get_matrix()
        ascii_qr = ""
        for row in modules:
            line = ""
            for module in row:
                line += "‚ñà‚ñà" if module else "  "
            ascii_qr += line + "\n"
        
        return ascii_qr
    except:
        return "QR –∫–æ–¥ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω (—É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ: pip install qrcode)"

def open_browser(url):
    """–û—Ç–∫—Ä—ã–≤–∞–µ—Ç –±—Ä–∞—É–∑–µ—Ä —á–µ—Ä–µ–∑ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–µ–∫—É–Ω–¥ –ø–æ—Å–ª–µ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞"""
    print(f"üåê –û—Ç–∫—Ä—ã–≤–∞–µ–º –±—Ä–∞—É–∑–µ—Ä: {url}")
    webbrowser.open(url)

def start_mobile_server():
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç HTTP —Å–µ—Ä–≤–µ—Ä, –¥–æ—Å—Ç—É–ø–Ω—ã–π –∏–∑ –ª–æ–∫–∞–ª—å–Ω–æ–π —Å–µ—Ç–∏"""
    
    port = 8000
    local_ip = get_local_ip()
    local_url = f"http://{local_ip}:{port}"
    localhost_url = f"http://localhost:{port}"
    
    print("=" * 70)
    print("üì± –ó–∞–ø—É—Å–∫ –≤–µ–±-—Å–µ—Ä–≤–µ—Ä–∞ –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤")
    print("=" * 70)
    print(f"üìÇ –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: {os.getcwd()}")
    print(f"üîß Python: {sys.version}")
    print()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ñ–∞–π–ª–æ–≤
    files_to_check = ['index.html', 'ar-app.js', 'style.css']
    missing_files = [f for f in files_to_check if not os.path.exists(f)]
    
    if missing_files:
        print("‚ùå –û—à–∏–±–∫–∞: –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Ñ–∞–π–ª—ã:")
        for file in missing_files:
            print(f"   - {file}")
        print("\nüí° –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏!")
        return
    
    print("‚úÖ –í—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Ñ–∞–π–ª—ã –Ω–∞–π–¥–µ–Ω—ã!")
    print()
    
    # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –¥–æ—Å—Ç—É–ø–µ
    print("üåç URLs –¥–ª—è –¥–æ—Å—Ç—É–ø–∞:")
    print(f"   üíª –ù–∞ —ç—Ç–æ–º –∫–æ–º–ø—å—é—Ç–µ—Ä–µ: {localhost_url}")
    print(f"   üì± –ù–∞ –º–æ–±–∏–ª—å–Ω–æ–º —É—Å—Ç—Ä–æ–π—Å—Ç–≤–µ: {local_url}")
    print()
    
    # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å—Ç—Ä–∞–Ω–∏—Ü–∞—Ö
    pages = [
        ("–ë–∞–∑–æ–≤–∞—è –≤–µ—Ä—Å–∏—è AR", "index.html"),
        ("–ü—Ä–æ–¥–≤–∏–Ω—É—Ç–∞—è –≤–µ—Ä—Å–∏—è AR", "advanced.html")
    ]
    
    print("üìÑ –î–æ—Å—Ç—É–ø–Ω—ã–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã:")
    for name, file in pages:
        if os.path.exists(file):
            print(f"   ‚úÖ {name}:")
            print(f"      üíª {localhost_url}/{file}")
            print(f"      üì± {local_url}/{file}")
        else:
            print(f"   ‚ùå {name}: {file} (–Ω–µ –Ω–∞–π–¥–µ–Ω)")
    
    print()
    print("üì± QR –∫–æ–¥ –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞ —Å —Ç–µ–ª–µ—Ñ–æ–Ω–∞:")
    print("   –û—Ç—Å–∫–∞–Ω–∏—Ä—É–π—Ç–µ QR –∫–æ–¥ –∫–∞–º–µ—Ä–æ–π —Ç–µ–ª–µ—Ñ–æ–Ω–∞:")
    print()
    
    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º QR –∫–æ–¥
    qr_code = generate_qr_code(local_url)
    print(qr_code)
    print(f"   URL: {local_url}")
    print()
    
    # –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –¥–ª—è –º–æ–±–∏–ª—å–Ω–æ–≥–æ
    print("üì≤ –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –¥–ª—è –º–æ–±–∏–ª—å–Ω–æ–≥–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞:")
    print("   1. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Ç–µ–ª–µ—Ñ–æ–Ω –ø–æ–¥–∫–ª—é—á–µ–Ω –∫ —Ç–æ–π –∂–µ Wi-Fi —Å–µ—Ç–∏")
    print("   2. –û—Ç–∫—Ä–æ–π—Ç–µ –±—Ä–∞—É–∑–µ—Ä –Ω–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–µ (Chrome —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è)")
    print(f"   3. –í–≤–µ–¥–∏—Ç–µ –∞–¥—Ä–µ—Å: {local_ip}:8000")
    print("   4. –ò–ª–∏ –æ—Ç—Å–∫–∞–Ω–∏—Ä—É–π—Ç–µ QR –∫–æ–¥ –≤—ã—à–µ")
    print("   5. –†–∞–∑—Ä–µ—à–∏—Ç–µ –¥–æ—Å—Ç—É–ø –∫ –∫–∞–º–µ—Ä–µ")
    print("   6. –ù–∞–≤–µ–¥–∏—Ç–µ –∫–∞–º–µ—Ä—É –Ω–∞ —Ä–æ–≤–Ω—É—é –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç—å")
    print()
    
    print("üî¥ –î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ —Å–µ—Ä–≤–µ—Ä–∞ –Ω–∞–∂–º–∏—Ç–µ Ctrl+C")
    print("=" * 70)
    print()
    
    # –û—Ç–∫—Ä—ã–≤–∞–µ–º –±—Ä–∞—É–∑–µ—Ä –Ω–∞ –∫–æ–º–ø—å—é—Ç–µ—Ä–µ —á–µ—Ä–µ–∑ 2 —Å–µ–∫—É–Ω–¥—ã
    Timer(2.0, open_browser, [localhost_url]).start()
    
    try:
        if sys.version_info[0] == 3:
            import http.server
            import socketserver
            
            class MobileHTTPRequestHandler(http.server.SimpleHTTPRequestHandler):
                def end_headers(self):
                    # CORS –∑–∞–≥–æ–ª–æ–≤–∫–∏ –¥–ª—è AR
                    self.send_header('Access-Control-Allow-Origin', '*')
                    self.send_header('Access-Control-Allow-Methods', 'GET, POST, OPTIONS')
                    self.send_header('Access-Control-Allow-Headers', 'Content-Type')
                    
                    # –ó–∞–≥–æ–ª–æ–≤–∫–∏ –¥–ª—è –∫–∞–º–µ—Ä—ã –Ω–∞ –º–æ–±–∏–ª—å–Ω—ã—Ö
                    self.send_header('Permissions-Policy', 'camera=*, microphone=*')
                    self.send_header('Feature-Policy', 'camera *; microphone *')
                    
                    # –ó–∞–≥–æ–ª–æ–≤–∫–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
                    self.send_header('Cross-Origin-Embedder-Policy', 'credentialless')
                    self.send_header('Cross-Origin-Opener-Policy', 'same-origin')
                    
                    super().end_headers()
                
                def log_message(self, format, *args):
                    # –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —Å —É–∫–∞–∑–∞–Ω–∏–µ–º —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞
                    user_agent = self.headers.get('User-Agent', '')
                    device_type = "üì±" if any(mobile in user_agent.lower() for mobile in ['mobile', 'android', 'iphone']) else "üíª"
                    print(f"{device_type} {self.address_string()} - {format % args}")
            
            # –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–µ—Ä, –¥–æ—Å—Ç—É–ø–Ω—ã–π –∏–∑ –ª–æ–∫–∞–ª—å–Ω–æ–π —Å–µ—Ç–∏
            with socketserver.TCPServer(("0.0.0.0", port), MobileHTTPRequestHandler) as httpd:
                print(f"üü¢ –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –∏ –¥–æ—Å—Ç—É–ø–µ–Ω –≤ –ª–æ–∫–∞–ª—å–Ω–æ–π —Å–µ—Ç–∏!")
                print(f"üíª –õ–æ–∫–∞–ª—å–Ω—ã–π –¥–æ—Å—Ç—É–ø: {localhost_url}")
                print(f"üì± –ú–æ–±–∏–ª—å–Ω—ã–π –¥–æ—Å—Ç—É–ø: {local_url}")
                print()
                httpd.serve_forever()
                
        else:
            print("‚ùå –¢—Ä–µ–±—É–µ—Ç—Å—è Python 3 –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –º–æ–±–∏–ª—å–Ω—ã–º–∏ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞–º–∏!")
            
    except KeyboardInterrupt:
        print("\nüõë –°–µ—Ä–≤–µ—Ä –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
    except OSError as e:
        if "Address already in use" in str(e):
            print(f"‚ùå –û—à–∏–±–∫–∞: –ü–æ—Ä—Ç {port} —É–∂–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è!")
            print(f"üí° –û—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø—Ä–µ–¥—ã–¥—É—â–∏–π —Å–µ—Ä–≤–µ—Ä (Ctrl+C) –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞")
            print(f"   –ò–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –¥—Ä—É–≥–æ–π –ø–æ—Ä—Ç: python start_mobile_server.py")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞: {e}")
    except Exception as e:
        print(f"‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")

if __name__ == "__main__":
    print("üöÄ –í–µ–±-AR —Å–µ—Ä–≤–µ—Ä –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤")
    print()
    print("üí° –°–æ–≤–µ—Ç—ã –¥–ª—è AR –Ω–∞ –º–æ–±–∏–ª—å–Ω–æ–º:")
    print("   ‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ Chrome –∏–ª–∏ Safari")
    print("   ‚Ä¢ –†–∞–∑—Ä–µ—à–∏—Ç–µ –¥–æ—Å—Ç—É–ø –∫ –∫–∞–º–µ—Ä–µ")
    print("   ‚Ä¢ –û–±–µ—Å–ø–µ—á—å—Ç–µ —Ö–æ—Ä–æ—à–µ–µ –æ—Å–≤–µ—â–µ–Ω–∏–µ")
    print("   ‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–Ω—Ç—Ä–∞—Å—Ç–Ω—ã–µ –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç–∏")
    print("   ‚Ä¢ –î–µ—Ä–∂–∏—Ç–µ —Ç–µ–ª–µ—Ñ–æ–Ω —É—Å—Ç–æ–π—á–∏–≤–æ")
    print("   ‚Ä¢ –ú–µ–¥–ª–µ–Ω–Ω–æ –ø–µ—Ä–µ–º–µ—â–∞–π—Ç–µ –∫–∞–º–µ—Ä—É –¥–ª—è –∫–∞–ª–∏–±—Ä–æ–≤–∫–∏")
    print()
    
    start_mobile_server() 